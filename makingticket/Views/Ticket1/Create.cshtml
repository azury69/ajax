@{
    Layout = "_Layout";
}
@model TicketViewModel

<h2>Create Ticket</h2>

<div id="ticketContainer">
    @await Html.PartialAsync("_TicketCreate", Model)
</div>

<button id="addTicketButton" class="btn btn-secondary">Create New Ticket</button>

<h2>Ticket List</h2>

<div id="listContainer">
    @await Html.PartialAsync("_TicketList", Model.Tickets)
</div>

@section Styles {
        <link rel="stylesheet" href="~/css/createticket.css" />
        <style>
            /* Additional page-specific styles here */
            #ticketContainer {
                display: flex;
                gap: 10px;
                flex-wrap: wrap;
            }

            .ticket-form {
                width: 30%;
            }

            .form-group {
                width: 100%; /* Ensure fields inside the form take the full width of the form */
            }
        </style>
}

@section Scripts {
        <script>
            $(document).ready(function () {
                // Fetch and render the initial ticket list when the page loads
                $.ajax({
                    url: "@Url.Action("GetTickets", "Ticket")",  // Action to fetch the ticket list
                    type: "GET",
                    success: function (data) {
                        // Populate the ticket list in the #listContainer
                        $("#listContainer").html(data);  // Render the updated ticket list in the container
                    },
                    error: function () {
                        alert("Error: Unable to fetch ticket list.");
                    }
                });

                // Handle form submission for creating a ticket
                $("#createTicketForm").submit(function (e) {
                    e.preventDefault(); // Prevent default form submission
                    var formData = $(this).serialize();  // Serialize the form data

                    $.ajax({
                        url: "@Url.Action("Create", "Ticket")",  // The action to call on the server
                        type: "POST",  // HTTP method (POST)
                        data: formData,  // The form data to send
                        success: function (response) {
                            if (response) {  // Check if the ticket was successfully created
                                alert("Ticket created successfully!");
                                $("#createTicketForm")[0].reset();  // Reset the form after creation

                                // Now fetch and update the ticket list
                                $.ajax({
                                    url: "@Url.Action("GetTickets", "Ticket")",  // Action to get the updated ticket list
                                    type: "GET",
                                    success: function (data) {
                                        // Update the #listContainer with the new ticket list
                                        $("#listContainer").html(data);  // Render the updated ticket list in the container
                                    },
                                    error: function () {
                                        alert("Error: Unable to fetch updated ticket list.");
                                    }
                                });
                            } else {
                                alert("Error occurred while creating the ticket.");
                            }
                        },
                        error: function () {
                            alert("Error: Unable to submit the form.");
                        }
                    });
                });

                // Add new form when "Create New Ticket" is clicked
                $('#addTicketButton').click(function () {
                    var newTicketForm = $('#ticketContainer').children().first().clone();

                    // Reset the form fields in the cloned form
                    newTicketForm.find('input, textarea, select').val('');

                    // Ensure the cloned form has the correct class for submission
                    newTicketForm.addClass('ticket-form');

                    // Append the new form to the container
                    $('#ticketContainer').append(newTicketForm);
                });

                // Handle dynamic form submissions
                $('#ticketContainer').on('submit', '.ticket-form', function (e) {
                    e.preventDefault(); // Prevent default form submission
                    var formData = $(this).serialize();  // Serialize the form data
                    var form = $(this); // Get the current form to reset it later

                    $.ajax({
                        url: "@Url.Action("Create", "Ticket")",  // Action to create the ticket
                        type: "POST",  // HTTP method (POST)
                        data: formData,  // The form data to send
                        success: function (response) {
                            if (response) {  // Ticket creation successful
                                alert("Ticket created successfully!");
                                form[0].reset();  // Reset the form after creation

                                // Fetch and update the ticket list after form submission
                                $.ajax({
                                    url: "@Url.Action("GetTickets", "Ticket")",  // Action to get the updated ticket list
                                    type: "GET",
                                    success: function (data) {
                                        $("#listContainer").html(data);  // Replace the list container with the updated list
                                    },
                                    error: function () {
                                        alert("Error: Unable to fetch updated ticket list.");
                                    }
                                });
                            } else {
                                alert("Error occurred while creating the ticket.");
                            }
                        },
                        error: function () {
                            alert("Error: Unable to submit the form.");
                        }
                    });
                });
            });
        </script>
}
